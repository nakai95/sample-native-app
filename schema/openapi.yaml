openapi: "3.0.0"
info:
  version: 1.0.0
  title: Authenticated API Example
  description: An example API which uses bearer token scopes and JWT auth
servers:
  - url: http://localhost:8080
    description: Local development server
    variables:
      port:
        default: "8080"
        description: The port to run the server on
paths:
  /health:
    get:
      operationId: healthCheck
      description: A simple health check endpoint
      responses:
        200:
          description: OK
  /auth/token:
    post:
      operationId: getToken
      description: |
        Returns a JWT token for a given username and password. This endpoint
        does not require a JWT token to access.
      requestBody:
        description: A username and password to authenticate
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        200:
          description: A JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /events:
    get:
      operationId: listEvents
      description: |
        Returns a list of events. This endpoint requires a JWT token with the
        `read:events` scope to access.
      security:
        - BearerAuth: []
      responses:
        200:
          description: a list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventsWithID"
  /chats:
    get:
      summary: List all chat rooms
      description: Returns a list of all chat rooms.
      operationId: listChatRooms
      responses:
        200:
          description: A list of chat rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatRoom"
  /chats/{roomId}/messages:
    get:
      summary: List all messages in a chat room
      description: Returns a list of all messages in a chat room.
      operationId: listChatMessages
      parameters:
        - name: roomId
          in: path
          description: The ID of the chat room
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of chat messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatMessage"
  /ws/{id}:
    get:
      summary: WebSocket endpoint for chat
      operationId: chatWebSocket
      parameters:
        - name: id
          in: path
          description: The ID of the chat room
          required: true
          schema:
            type: string
      responses:
        "101":
          description: Switching Protocols
components:
  schemas:
    Events:
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
      required:
        - name
        - description
        - imageUrl
    EventsWithID:
      allOf:
        - $ref: "#/components/schemas/Events"
        - properties:
            id:
              type: string
          required:
            - id
    ChatRoom:
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    ChatMessage:
      properties:
        id:
          type: string
        roomId:
          type: string
        userId:
          type: string
        message:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - roomId
        - userId
        - message
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
